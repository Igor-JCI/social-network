{"version":3,"file":"static/js/545.9ff1ef3c.chunk.js","mappings":"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","sources":["webpack://samurai-way/./src/components/Common/Paginator/Paginator.module.css?308c","components/Common/Paginator/Paginator.tsx","webpack://samurai-way/./src/components/Users/users.module.css?9211","components/Users/User.tsx","components/Users/Users.tsx","../node_modules/reselect/es/defaultMemoize.js","../node_modules/reselect/es/index.js","Redux/users-selectors.tsx","components/Users/UsersContainer.tsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"selectedPage\":\"Paginator_selectedPage__AN+JS\",\"paginator\":\"Paginator_paginator__gFa5g\",\"pageNumber\":\"Paginator_pageNumber__KL7yC\",\"button\":\"Paginator_button__1Vzru\",\"div\":\"Paginator_div__VNryS\"};","import React, {useState} from \"react\";\r\nimport styles from \"./Paginator.module.css\";\r\nimport cn from \"classnames\"\r\nimport {Button, Flex} from 'antd';\r\nimport { Pagination } from 'antd';\r\n\r\ntype PaginatorType = {\r\n    totalItemsCount: number,\r\n    pageSize: number,\r\n    onPageChanged: (pageNumber: number) => void,\r\n    currentPage: number,\r\n    portionSize: 10\r\n}\r\n\r\nconst Paginator = (props: PaginatorType) => {\r\n    let pagesCount = Math.ceil(props.totalItemsCount / props.pageSize)\r\n    let pages = []\r\n    for (let i = 1; i <= pagesCount; i++) {\r\n        pages.push(i)\r\n    }\r\n\r\n    let portionCount = Math.ceil(pagesCount / props.portionSize)\r\n    let [portionNumber, setPortionNumber] = useState(1)\r\n    let leftPortionPageNumber = (portionNumber - 1) * props.portionSize + 1\r\n    let rightPortionPageNumber = portionNumber * props.portionSize\r\n\r\n\r\n    return (\r\n        <div className={styles.div}>\r\n            {portionNumber > 1 &&\r\n                <Flex gap=\"small\" wrap=\"wrap\" className={styles.button}>\r\n                    <Button size={\"small\"} type=\"text\" onClick={() => {\r\n                        setPortionNumber(portionNumber - 1)\r\n                    }}>PREV</Button>\r\n                </Flex>\r\n\r\n            }\r\n            {pages\r\n                .filter(p => p >= leftPortionPageNumber && p <= rightPortionPageNumber)\r\n                .map(p => {\r\n                    return <span\r\n                        className={cn(\r\n                            {[styles.selectedPage]: props.currentPage === p},\r\n                            styles.pageNumber\r\n                        )}\r\n                        onClick={(e: React.MouseEvent<HTMLElement>) => {\r\n                            props.onPageChanged(p)\r\n                        }}>{p}</span>\r\n                })}\r\n            {\r\n                portionCount > portionNumber &&\r\n                <Flex gap=\"small\" wrap=\"wrap\" className={styles.button}>\r\n                    <Button size={\"small\"} type=\"text\" onClick={() => {\r\n                        setPortionNumber(portionNumber + 1)\r\n                    }}>NEXT</Button>\r\n                </Flex>\r\n            }\r\n        </div>\r\n    )\r\n}\r\nexport default Paginator\r\n","// extracted by mini-css-extract-plugin\nexport default {\"userPhoto\":\"users_userPhoto__59RSm\"};","import React from \"react\";\r\nimport styles from \"./users.module.css\";\r\nimport userPhoto from \"../../assets/images/user.png\"\r\nimport {UsersType} from \"../../Redux/Users-reducer\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport {Button, Flex} from 'antd';\r\n\r\nexport type UserType = {\r\n    user: UsersType,\r\n    followingInProgress: number[],\r\n    follow: (userId: number) => void,\r\n    unfollow: (userId: number) => void\r\n}\r\n\r\nconst User = (props: UserType) => {\r\n\r\n    return (\r\n        <div>\r\n            <span>\r\n              <div>\r\n                <NavLink to={\"/profile/\" + props.user.id}>\r\n                    <img src={props.user.photos.small != null ? props.user.photos.small : userPhoto}\r\n                         className={styles.userPhoto}/>\r\n                </NavLink>\r\n            </div>\r\n                <div>\r\n                {\r\n                    props.user.followed\r\n                        ? <Flex gap=\"small\" wrap=\"wrap\">\r\n                            <Button size={\"small\"} disabled={props.followingInProgress.some(id => id === props.user.id)}\r\n                                    onClick={() => {\r\n                                        props.unfollow(props.user.id)\r\n                                    }}>Unfollow</Button>\r\n                        </Flex>\r\n\r\n                        : <Flex gap=\"small\" wrap=\"wrap\">\r\n                            <Button size={\"small\"} disabled={props.followingInProgress.some(id => id === props.user.id)}\r\n                                    onClick={() => {\r\n                                        props.follow(props.user.id)\r\n                                    }}>Follow</Button>\r\n                        </Flex>\r\n                }\r\n            </div>\r\n            </span>\r\n            <span>\r\n                <span>\r\n                            <div>Name: {props.user.name}</div>\r\n                            <div>{props.user.status}</div>\r\n                        </span>\r\n                        <span>\r\n                            <div>{\"location-country\"}</div>\r\n                            <div>{\"location-city\"}</div>\r\n                        </span>\r\n            </span>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default User\r\n","import React from \"react\";\r\nimport styles from \"./users.module.css\";\r\nimport userPhoto from \"../../assets/images/user.png\"\r\nimport {UsersType} from \"../../Redux/Users-reducer\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport Paginator from \"../Common/Paginator/Paginator\";\r\nimport User from \"./User\";\r\n\r\nexport type UsersPropsType = {\r\n    totalUsersCount: number,\r\n    pageSize: number,\r\n    currentPage: number,\r\n    onPageChanged: (pageNumber: number) => void,\r\n    followSuccess: (userId: number) => void,\r\n    unfollowSuccess: (userId: number) => void,\r\n    users: Array<UsersType>,\r\n    followingInProgress: number[],\r\n    follow: (userId: number) => void,\r\n    unfollow: (userId: number) => void\r\n}\r\n\r\nconst Users = (props: UsersPropsType) => {\r\n    return (\r\n        <div>\r\n            <Paginator totalItemsCount={props.totalUsersCount} pageSize={props.pageSize}\r\n                       onPageChanged={props.onPageChanged} currentPage={props.currentPage} portionSize = {10}/>\r\n            <div>\r\n                {\r\n                    props.users.map((u: UsersType) => <User user={u} followingInProgress={props.followingInProgress}\r\n                                                            follow={props.follow} unfollow={props.unfollow}\r\n                                                            key={u.id}/>)\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Users\r\n","// Cache implementation based on Erik Rasmussen's `lru-memoize`:\n// https://github.com/erikras/lru-memoize\nvar NOT_FOUND = 'NOT_FOUND';\n\nfunction createSingletonCache(equals) {\n  var entry;\n  return {\n    get: function get(key) {\n      if (entry && equals(entry.key, key)) {\n        return entry.value;\n      }\n\n      return NOT_FOUND;\n    },\n    put: function put(key, value) {\n      entry = {\n        key: key,\n        value: value\n      };\n    },\n    getEntries: function getEntries() {\n      return entry ? [entry] : [];\n    },\n    clear: function clear() {\n      entry = undefined;\n    }\n  };\n}\n\nfunction createLruCache(maxSize, equals) {\n  var entries = [];\n\n  function get(key) {\n    var cacheIndex = entries.findIndex(function (entry) {\n      return equals(key, entry.key);\n    }); // We found a cached entry\n\n    if (cacheIndex > -1) {\n      var entry = entries[cacheIndex]; // Cached entry not at top of cache, move it to the top\n\n      if (cacheIndex > 0) {\n        entries.splice(cacheIndex, 1);\n        entries.unshift(entry);\n      }\n\n      return entry.value;\n    } // No entry found in cache, return sentinel\n\n\n    return NOT_FOUND;\n  }\n\n  function put(key, value) {\n    if (get(key) === NOT_FOUND) {\n      // TODO Is unshift slow?\n      entries.unshift({\n        key: key,\n        value: value\n      });\n\n      if (entries.length > maxSize) {\n        entries.pop();\n      }\n    }\n  }\n\n  function getEntries() {\n    return entries;\n  }\n\n  function clear() {\n    entries = [];\n  }\n\n  return {\n    get: get,\n    put: put,\n    getEntries: getEntries,\n    clear: clear\n  };\n}\n\nexport var defaultEqualityCheck = function defaultEqualityCheck(a, b) {\n  return a === b;\n};\nexport function createCacheKeyComparator(equalityCheck) {\n  return function areArgumentsShallowlyEqual(prev, next) {\n    if (prev === null || next === null || prev.length !== next.length) {\n      return false;\n    } // Do this in a for loop (and not a `forEach` or an `every`) so we can determine equality as fast as possible.\n\n\n    var length = prev.length;\n\n    for (var i = 0; i < length; i++) {\n      if (!equalityCheck(prev[i], next[i])) {\n        return false;\n      }\n    }\n\n    return true;\n  };\n}\n// defaultMemoize now supports a configurable cache size with LRU behavior,\n// and optional comparison of the result value with existing values\nexport function defaultMemoize(func, equalityCheckOrOptions) {\n  var providedOptions = typeof equalityCheckOrOptions === 'object' ? equalityCheckOrOptions : {\n    equalityCheck: equalityCheckOrOptions\n  };\n  var _providedOptions$equa = providedOptions.equalityCheck,\n      equalityCheck = _providedOptions$equa === void 0 ? defaultEqualityCheck : _providedOptions$equa,\n      _providedOptions$maxS = providedOptions.maxSize,\n      maxSize = _providedOptions$maxS === void 0 ? 1 : _providedOptions$maxS,\n      resultEqualityCheck = providedOptions.resultEqualityCheck;\n  var comparator = createCacheKeyComparator(equalityCheck);\n  var cache = maxSize === 1 ? createSingletonCache(comparator) : createLruCache(maxSize, comparator); // we reference arguments instead of spreading them for performance reasons\n\n  function memoized() {\n    var value = cache.get(arguments);\n\n    if (value === NOT_FOUND) {\n      // @ts-ignore\n      value = func.apply(null, arguments);\n\n      if (resultEqualityCheck) {\n        var entries = cache.getEntries();\n        var matchingEntry = entries.find(function (entry) {\n          return resultEqualityCheck(entry.value, value);\n        });\n\n        if (matchingEntry) {\n          value = matchingEntry.value;\n        }\n      }\n\n      cache.put(arguments, value);\n    }\n\n    return value;\n  }\n\n  memoized.clearCache = function () {\n    return cache.clear();\n  };\n\n  return memoized;\n}","import { defaultMemoize, defaultEqualityCheck } from './defaultMemoize';\nexport { defaultMemoize, defaultEqualityCheck };\n\nfunction getDependencies(funcs) {\n  var dependencies = Array.isArray(funcs[0]) ? funcs[0] : funcs;\n\n  if (!dependencies.every(function (dep) {\n    return typeof dep === 'function';\n  })) {\n    var dependencyTypes = dependencies.map(function (dep) {\n      return typeof dep === 'function' ? \"function \" + (dep.name || 'unnamed') + \"()\" : typeof dep;\n    }).join(', ');\n    throw new Error(\"createSelector expects all input-selectors to be functions, but received the following types: [\" + dependencyTypes + \"]\");\n  }\n\n  return dependencies;\n}\n\nexport function createSelectorCreator(memoize) {\n  for (var _len = arguments.length, memoizeOptionsFromArgs = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    memoizeOptionsFromArgs[_key - 1] = arguments[_key];\n  }\n\n  var createSelector = function createSelector() {\n    for (var _len2 = arguments.length, funcs = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      funcs[_key2] = arguments[_key2];\n    }\n\n    var _recomputations = 0;\n\n    var _lastResult; // Due to the intricacies of rest params, we can't do an optional arg after `...funcs`.\n    // So, start by declaring the default value here.\n    // (And yes, the words 'memoize' and 'options' appear too many times in this next sequence.)\n\n\n    var directlyPassedOptions = {\n      memoizeOptions: undefined\n    }; // Normally, the result func or \"output selector\" is the last arg\n\n    var resultFunc = funcs.pop(); // If the result func is actually an _object_, assume it's our options object\n\n    if (typeof resultFunc === 'object') {\n      directlyPassedOptions = resultFunc; // and pop the real result func off\n\n      resultFunc = funcs.pop();\n    }\n\n    if (typeof resultFunc !== 'function') {\n      throw new Error(\"createSelector expects an output function after the inputs, but received: [\" + typeof resultFunc + \"]\");\n    } // Determine which set of options we're using. Prefer options passed directly,\n    // but fall back to options given to createSelectorCreator.\n\n\n    var _directlyPassedOption = directlyPassedOptions,\n        _directlyPassedOption2 = _directlyPassedOption.memoizeOptions,\n        memoizeOptions = _directlyPassedOption2 === void 0 ? memoizeOptionsFromArgs : _directlyPassedOption2; // Simplifying assumption: it's unlikely that the first options arg of the provided memoizer\n    // is an array. In most libs I've looked at, it's an equality function or options object.\n    // Based on that, if `memoizeOptions` _is_ an array, we assume it's a full\n    // user-provided array of options. Otherwise, it must be just the _first_ arg, and so\n    // we wrap it in an array so we can apply it.\n\n    var finalMemoizeOptions = Array.isArray(memoizeOptions) ? memoizeOptions : [memoizeOptions];\n    var dependencies = getDependencies(funcs);\n    var memoizedResultFunc = memoize.apply(void 0, [function () {\n      _recomputations++; // apply arguments instead of spreading for performance.\n\n      return resultFunc.apply(null, arguments);\n    }].concat(finalMemoizeOptions)); // If a selector is called with the exact same arguments we don't need to traverse our dependencies again.\n\n    var selector = memoize(function () {\n      var params = [];\n      var length = dependencies.length;\n\n      for (var i = 0; i < length; i++) {\n        // apply arguments instead of spreading and mutate a local list of params for performance.\n        // @ts-ignore\n        params.push(dependencies[i].apply(null, arguments));\n      } // apply arguments instead of spreading for performance.\n\n\n      _lastResult = memoizedResultFunc.apply(null, params);\n      return _lastResult;\n    });\n    Object.assign(selector, {\n      resultFunc: resultFunc,\n      memoizedResultFunc: memoizedResultFunc,\n      dependencies: dependencies,\n      lastResult: function lastResult() {\n        return _lastResult;\n      },\n      recomputations: function recomputations() {\n        return _recomputations;\n      },\n      resetRecomputations: function resetRecomputations() {\n        return _recomputations = 0;\n      }\n    });\n    return selector;\n  }; // @ts-ignore\n\n\n  return createSelector;\n}\nexport var createSelector = /* #__PURE__ */createSelectorCreator(defaultMemoize);\n// Manual definition of state and output arguments\nexport var createStructuredSelector = function createStructuredSelector(selectors, selectorCreator) {\n  if (selectorCreator === void 0) {\n    selectorCreator = createSelector;\n  }\n\n  if (typeof selectors !== 'object') {\n    throw new Error('createStructuredSelector expects first argument to be an object ' + (\"where each property is a selector, instead received a \" + typeof selectors));\n  }\n\n  var objectKeys = Object.keys(selectors);\n  var resultSelector = selectorCreator( // @ts-ignore\n  objectKeys.map(function (key) {\n    return selectors[key];\n  }), function () {\n    for (var _len3 = arguments.length, values = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n      values[_key3] = arguments[_key3];\n    }\n\n    return values.reduce(function (composition, value, index) {\n      composition[objectKeys[index]] = value;\n      return composition;\n    }, {});\n  });\n  return resultSelector;\n};","import React from \"react\";\r\nimport {RootStateType} from \"./Redux-store\";\r\nimport {createSelector} from \"reselect\";\r\n\r\nconst getUsersSelector = (state: RootStateType) => {\r\n    return state.usersPage.users\r\n}\r\nexport const getUsers = createSelector (getUsersSelector,(users) => {\r\n    return users\r\n})\r\n\r\nexport const getPageSize = (state: RootStateType) => {\r\n    return state.usersPage.pageSize\r\n}\r\n\r\nexport const getTotalUsersCount = (state: RootStateType) => {\r\n    return state.usersPage.totalUsersCount\r\n}\r\n\r\nexport const getCurrentPage = (state: RootStateType) => {\r\n    return state.usersPage.currentPage\r\n}\r\n\r\nexport const getIsFetching = (state: RootStateType) => {\r\n    return state.usersPage.isFetching\r\n}\r\n\r\nexport const getFollowingInProgress = (state: RootStateType) => {\r\n    return state.usersPage.followingInProgress\r\n}","import React, {ComponentType} from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport {\r\n    follow,\r\n    followSuccess,\r\n    requestUsers,\r\n    setCurrentPage,\r\n    unfollow,\r\n    unfollowSuccess,\r\n    UsersType\r\n} from \"../../Redux/Users-reducer\";\r\nimport {RootStateType} from \"../../Redux/Redux-store\";\r\nimport Users from \"./Users\";\r\nimport {Preloader} from \"../Common/Preloader/Preloader\";\r\nimport {compose} from \"redux\";\r\nimport {\r\n    getCurrentPage,\r\n    getFollowingInProgress,\r\n    getIsFetching,\r\n    getPageSize,\r\n    getTotalUsersCount,\r\n    getUsers\r\n} from \"../../Redux/users-selectors\";\r\n\r\ntype mstpType = {\r\n    users: Array<UsersType>,\r\n    pageSize: number,\r\n    totalUsersCount: number,\r\n    currentPage: number,\r\n    isFetching: boolean,\r\n    followingInProgress: number[]\r\n}\r\ntype mdtpType = {\r\n    followSuccess: (userId: number) => void,\r\n    unfollowSuccess: (userId: number) => void,\r\n    setCurrentPage: (currentPage: number) => void,\r\n    requestUsers: (currentPage: number, pageSize: number) => void,\r\n    follow: (userId: number) => void,\r\n    unfollow: (userId: number) => void\r\n}\r\nexport type CommonType = mstpType & mdtpType\r\n\r\nclass UsersContainer extends React.Component<CommonType> {\r\n    constructor(props: CommonType) {\r\n        super(props);\r\n    }\r\n\r\n    componentDidMount() {\r\n        const {currentPage, pageSize} = this.props\r\n        this.props.requestUsers(currentPage, pageSize)\r\n    }\r\n\r\n    onPageChanged = (pageNumber: number) => {\r\n        const {pageSize} = this.props\r\n        this.props.requestUsers(pageNumber, pageSize)\r\n        /* this.props.setCurrentPage(pageNumber)\r\n         this.props.toggleIsFetching(true)\r\n         userAPI.getUsers(pageNumber, this.props.pageSize).then(data => {\r\n             this.props.toggleIsFetching(false)\r\n             this.props.setUsers(data.items)\r\n         })*/\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                {this.props.isFetching ? <Preloader/> : null}\r\n                <Users\r\n                    totalUsersCount={this.props.totalUsersCount}\r\n                    pageSize={this.props.pageSize}\r\n                    currentPage={this.props.currentPage}\r\n                    onPageChanged={this.onPageChanged}\r\n                    followSuccess={this.props.followSuccess}\r\n                    unfollowSuccess={this.props.unfollowSuccess}\r\n                    users={this.props.users}\r\n                    followingInProgress={this.props.followingInProgress}\r\n                    follow={this.props.follow}\r\n                    unfollow={this.props.unfollow}\r\n                />\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\n/*let mapStateToProps = (state: RootStateType): mstpType => {\r\n    return {\r\n        users: state.usersPage.users,\r\n        pageSize: state.usersPage.pageSize,\r\n        totalUsersCount: state.usersPage.totalUsersCount,\r\n        currentPage: state.usersPage.currentPage,\r\n        isFetching: state.usersPage.isFetching,\r\n        followingInProgress: state.usersPage.followingInProgress\r\n    }\r\n}*/\r\n\r\nlet mapStateToProps = (state: RootStateType): mstpType => {\r\n    return {\r\n        users: getUsers(state),\r\n        pageSize: getPageSize(state),\r\n        totalUsersCount: getTotalUsersCount(state),\r\n        currentPage: getCurrentPage(state),\r\n        isFetching: getIsFetching(state),\r\n        followingInProgress: getFollowingInProgress(state)\r\n    }\r\n}\r\n\r\nexport default compose<ComponentType>(\r\n    connect(mapStateToProps, {followSuccess, unfollowSuccess, setCurrentPage, requestUsers, follow, unfollow}),\r\n)(UsersContainer)\r\n\r\n/*export default withAuthRedirect(connect(mapStateToProps,\r\n    {followSuccess, unfollowSuccess, setCurrentPage, getUsers, follow, unfollow})(UsersContainer))*/\r\n\r\n\r\n\r\n"],"names":["props","pagesCount","Math","ceil","totalItemsCount","pageSize","pages","i","push","portionCount","portionSize","useState","portionNumber","setPortionNumber","leftPortionPageNumber","rightPortionPageNumber","className","styles","gap","wrap","size","type","onClick","filter","p","map","cn","currentPage","e","onPageChanged","to","user","id","src","photos","small","userPhoto","followed","disabled","followingInProgress","some","unfollow","follow","name","status","totalUsersCount","users","u","NOT_FOUND","defaultEqualityCheck","a","b","defaultMemoize","func","equalityCheckOrOptions","providedOptions","equalityCheck","_providedOptions$equa","_providedOptions$maxS","maxSize","resultEqualityCheck","comparator","prev","next","length","createCacheKeyComparator","cache","equals","entry","get","key","value","put","getEntries","clear","undefined","createSingletonCache","entries","cacheIndex","findIndex","splice","unshift","pop","createLruCache","memoized","arguments","apply","matchingEntry","find","clearCache","getDependencies","funcs","dependencies","Array","isArray","every","dep","dependencyTypes","join","Error","createSelectorCreator","memoize","_len","memoizeOptionsFromArgs","_key","createSelector","_len2","_key2","_lastResult","_recomputations","directlyPassedOptions","memoizeOptions","resultFunc","_directlyPassedOption","_directlyPassedOption2","finalMemoizeOptions","memoizedResultFunc","concat","selector","params","Object","assign","lastResult","recomputations","resetRecomputations","getUsers","state","usersPage","getPageSize","getTotalUsersCount","getCurrentPage","getIsFetching","isFetching","getFollowingInProgress","UsersContainer","pageNumber","requestUsers","this","Preloader","followSuccess","unfollowSuccess","React","compose","connect","setCurrentPage"],"sourceRoot":""}